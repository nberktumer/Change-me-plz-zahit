export default {
    in: "In",
    out: "Out",
    loop: "Loop",
    scope: "Scope",
    true: "True",
    false: "False",
    ifStatement: "If Statement",
    variable: "Variable",
    constant: "Constant",
    constantValue: "Constant Value",
    assignment: "Assignment",
    arithmetic: "Arithmetic",
    while: "While",
    switch: "Switch",
    dismiss: "Dismiss",
    variableName: "Variable Name",
    dataType: "Data Type",
    variableType: "Variable Type",
    value: "Value",
    firstVariable: "First Variable",
    secondVariable: "Second Variable",
    select: "Select",
    operation: "Operation",
    recurse: "Recurse",
    initialFlow: "Initial Flow",
    firstOperator: "First Operator",
    secondOperator: "Second Operator",
    input: "Input",
    output: "Output",
    file: "File",
    save: "Save",
    load: "Load",
    new: "New",
    fileReadError: "Could not read file",
    variableExists: "Variable name is already in use!",
    variableFirstCharacterError: "First character of the variable name must be an alphabetic character!",
    variableContainsInvalidCharacters: "Variable name contains invalid characters!",
    classExists: "Function name is already in use!",
    classFirstCharacterError: "First character of the function name must be a capital alphabetic character!",
    classContainsInvalidCharacters: "Function name contains invalid characters!",
    packageExists: "Package name is already in use!",
    packageFirstCharacterError: "First character of the package name must be an alphabetic character!",
    packageContainsInvalidCharacters: "Package name contains invalid characters!",
    conditionType: "Condition Type",
    invalid: "Invalid",
    nextFlow: "Next Flow",
    random: "Random",
    minValue: "Minimum Value",
    maxValue: "Maximum Value",
    currentTime: "Current Time",
    properties: "Properties",
    newProject: "New Project",
    loadProject: "Load Project",
    projectName: "Project Name",
    createProject: "Create Project",
    cancel: "Cancel",
    create: "Create",
    newClass: "New Function",
    newDataClass: "New Variable Holder",
    newPackage: "New Package",
    newFunction: "New Function",
    dataClass: "Variable Holder",
    class: "Function",
    setProperties: "Set Properties",
    defaultValue: "Default Value",
    returnType: "Return Type",
    addArg: "Add Argument",
    argName: "Argument Name",
    argType: "Argument Type",
    return: "Return",
    assignToVariable: "Assign to Variable",
    assignFromVariable: "Assign from Variable",
    constantVariable: "Constant / Variable",
    createNewVariable: "Create New Variable",
    createNewAndExistingVariable: "Create New / Assign to Existing Variable",
    updateVariable: "Update Variable"
}
